// A complete configuration file for an Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz
// Scripts should populate the process0 entry for each application

sim : 
{
  attachDebugger = false;
  domains = 1;                      // vertical slices of the system, for wave phase parallelism
  contentionThreads = 1;            // XXX: whats this exaclty?
  phaseLength = 10000;              // bound phase length in cycles
  statsPhaseInterval = 100;         // Number of phases to dump periodic stats
  maxPhases = 0L;                   // Exit condition, execute maxPhases
  maxMinInstrs = 0L;                // Exit condition, all threads have executed maxTotalInstrs
  maxTotalInstrs = 0L;              // Exit condition, all cores combined executed maxTotalInstrs
  maxSimTime = 0;                   // Exit condition, simulation time in seconds
  maxProcEventualDumps = 0;         // Exit condition, number of heartbeat-triggered process dumps
  skipStatsVectors = false;         // Do not dump vector stats
  compactPeriodicStats = false;
  ignoreHooks = false;
  ffReinstrument = false;
  registerThreads = false;          // threads start as shadow, no effect on simulation until register magic op call
  startInGlobalPause = false;       // if set, pauses simulation on phase end
  parallelism = 8;                  // Number of concurrent host threads for bound phase
  schedQuantum = 10000;             // in phases
  blockingSyscalls = false;         // True might not work in MT applications, check in MP
  pinOptions = "";
  logToFile = true;                 // stdout stderr to file
  perProcessDir = false;            // run each process in a different subdirectory
  periodicStatsFilter = "";         // Filter certain stats
  perProcessCpuEnum = false;
  printMemoryStats = true;          // Simulator memory stats
  gmMBytes = 1024;                  // Simulator heap size in MB
  deadlockDetection = true;         // Detect potential deadlocks in the simulator, stalled for > 120 seconds
  aslr = false;                      // False for multi-process
  strictConfig = true;              // Check the config file for errors
};
sys : 
{
  cores : 
  {
    sandy : 
    {
      cores = 8;
      type = "OOO";
      icache = "l1i";
      dcache = "l1d";
    };
  };
  frequency = 2600;
  lineSize = 64;
  addressRandomization = true;
  networkFile = "";
  caches : 
  {
    l1d : 
    {
      parent = "l2";
      isPrefetcher = false;
      size = 32768;
      banks = 1;
      caches = 8;
      array : 
      {
        ways = 8;
        type = "SetAssoc";
        hash = "None";
      };
      repl : 
      {
        type = "LRU";
      };
      latency = 4;
      type = "Simple";
      nonInclusiveHack = false;
    };
    l1i : 
    {
      parent = "l2";
      isPrefetcher = false;
      size = 32768;
      banks = 1;
      caches = 8;
      array : 
      {
        ways = 8;
        type = "SetAssoc";
        hash = "None";
      };
      repl : 
      {
        type = "LRU";
      };
      latency = 4;
      type = "Simple";
      nonInclusiveHack = false;
    };
    l2 : 
    {
      parent = "l3";
      isPrefetcher = false;
      size = 262144;
      banks = 1;
      caches = 8;
      array : 
      {
        ways = 8;
        type = "SetAssoc";
        hash = "None";
      };
      repl : 
      {
        type = "LRU";
      };
      latency = 8;
      type = "Simple";
      nonInclusiveHack = false;
    };
    l3 : 
    {
      parent = "mem";
      isPrefetcher = false;
      size = 16777216;              // Set to 16MB, cannot be 20MB
      banks = 8;
      caches = 1;
      array : 
      {
        ways = 16;
        type = "SetAssoc";
        hash = "H3";
      };
      repl : 
      {
        type = "LRU";
      };
      latency = 28;
      type = "Simple";
      nonInclusiveHack = false;
    };
  };
  mem : 
  {
    controllers = 1;
    type = "NVMain";
    hasDRAMCache = false;
    latency = 50;
    techIni = "ZSIMPATH/tests/pcm-nvmain.config";
    envVar = "ZSIMPATH";
    outputFile = "nvmain.out";
    traceName = "";
  };
};

// Populate process entries with scripts
// Simple example with 2 processes given
process0 = {
    command = "sh /home/zhuguoliang/workspace/MyRunScripts/My_SPEC06_Scripts/400_1t.sh";
//     command = "cd /home/zhuguoliang/workspace/benchmark/cpu2006-1.2/benchspec/CPU2006/400.perlbench/run/run_base_ref_gcc43-64bit.0000 && ../run_base_ref_gcc43-64bit.0000/perlbench_base.gcc43-64bit  -I./lib checkspam.pl 2500 5 25 11 150 1 1 1 1 > checkspam.2500.5.25.11.150.1.1.1.1.out 2>> checkspam.2500.5.25.11.150.1.1.1.1.err";
};

//process1 = {
//    command = "sh /home/zhuguoliang/workspace/MyRunScripts/My_SPEC06_Scripts/401_1t.sh";
//};
